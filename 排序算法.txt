排序
   升序(非降序)
   降序(非升序)
七大基于比较的排序(通用性最好,只要实现 interface Comparable)
     稳定性
内部排序(数据全部在内存中处理的排序,内部排序)
外部排序

直接插入排序(减治算法)
     抓扑克牌
    时间复杂度:O(n^2)
    普通插入排序
希尔排序(分组插排)
      (直接插入排序的进化版本)
	  分组多大合适
	  分的组越多,走的步伐越大
	  分组越少,排完后越接近有序
	
选择排序
    封神榜(走一趟封一个神)
    时间复杂度:O(n^2)
    直接选择排序(选择排序)
堆排序
     (减治算法)
	 利用二叉树选择最大的数
冒泡排序:(减治算法)
         时间复杂度:O(n^2)
		 狗熊掰玉米
快速排序(分治算法)
   一.1.选择一个基准值(选择区间最右边的数作为基准值)
      2.遍历整个区间,每个都和基准值进行比较,并且发生交换,
      3.三数取中法
   二.分割partition,比基准值 <=在基准值左边
                    比基准值 > 在基准值右边 
       hover法-->左右遍历
       挖坑法-->左右遍历
	   前后下标法-->单向遍历
   三.分治算法处理左右两个小区间,直到区间的size=0或者size=1(已经有序)   
   
归并排序(分治算法)
   1.把要排序的区间平均分成两部分
   2.分治算法,对左右两个区间进行排序,直到size=0或者size==1
   3.合并两个有序区间到一个有序区间(需要额外的空间)


  	